using System.Collections.Generic;

using Soteria.Foundation;
using Soteria.Foundation.Contracts;

namespace Soteria.Network.Threats
{
    public class Malware : SpreadingThreatBase, IThreat
    {
        protected override void Spread()
        {
            if (!this.InfectedNodes.Contains(this.NodeToInfect) && this.NodeToInfect.AttemptInfection(this))
            {
                this.InfectedNodes.Add(this.NodeToInfect);
                return;
            }

            var targets = new List<INetworkNode>(this.InfectedNodes);

            foreach (var infectedNode in targets)
            {
                foreach (var connection in infectedNode.Connections)
                {
                    if (!connection.Target.Infections.Contains(this) && connection.Target.AttemptInfection(this))
                    {
                        this.InfectedNodes.Add(connection.Target);
                    }
                }
            }
        }

        public override void RemoveNode(INetworkNode node)
        {
            this.InfectedNodes.Remove(node);
        }
    }
}